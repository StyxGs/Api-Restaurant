version: "3.8"

services:

  api:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    container_name: api
    env_file:
      - ./config_env/.env
    ports:
      - "8000:80"
    entrypoint: sh -c "alembic revision --autogenerate -m 'init' && alembic upgrade +1 && uvicorn src.api.__main__:app --host 0.0.0.0 --port 80"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  db:
    image: postgres:15.1-alpine
    restart: always
    container_name: database
    env_file:
      - ./config_env/.env
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7.0.12-alpine
    restart: always
    container_name: redis
    env_file:
      - ./config_env/.env
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli ping" ]
      interval: 10s
      timeout: 5s
      retries: 5


  celery:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    env_file:
      - ./config_env/.env
    container_name: celery_tasks
    command: celery -A celery_tasks.main worker -l info -B
    depends_on:
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./admin/:/task/admin/


  rabbitmq:
    image: rabbitmq:3-management
    restart: always
    hostname: rabbitmq
    container_name: rabbitmq
    env_file:
      - ./config_env/.env
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: [ "CMD-SHELL", "rabbitmq-diagnostics -q ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
